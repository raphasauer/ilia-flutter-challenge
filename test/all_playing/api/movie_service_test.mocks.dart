// Mocks generated by Mockito 5.4.2 from annotations
// in ilia_flutter_challenge/test/all_playing/api/movie_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:ilia_flutter_challenge/common/entities/failures.dart' as _i5;
import 'package:ilia_flutter_challenge/features/now_playing/api/api_client.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiClient extends _i1.Mock implements _i3.ApiClient {
  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);

  @override
  String get apiKey => (super.noSuchMethod(
        Invocation.getter(#apiKey),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);

  @override
  _i4.Future<_i2.Either<_i5.FetchFailure, dynamic>> fetch(
    String? path, [
    Map<String, dynamic>? params = const {},
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [
            path,
            params,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.FetchFailure, dynamic>>.value(
            _FakeEither_0<_i5.FetchFailure, dynamic>(
          this,
          Invocation.method(
            #fetch,
            [
              path,
              params,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.FetchFailure, dynamic>>.value(
                _FakeEither_0<_i5.FetchFailure, dynamic>(
          this,
          Invocation.method(
            #fetch,
            [
              path,
              params,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.FetchFailure, dynamic>>);
}
