// Mocks generated by Mockito 5.4.2 from annotations
// in ilia_flutter_challenge/test/all_playing/presentation/viewmodels/movie_list_viewmodel_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:ilia_flutter_challenge/common/entities/failures.dart' as _i6;
import 'package:ilia_flutter_challenge/features/now_playing/api/api_client.dart'
    as _i2;
import 'package:ilia_flutter_challenge/features/now_playing/api/movie_service.dart'
    as _i4;
import 'package:ilia_flutter_challenge/features/now_playing/data/models/movie_detail_model.dart'
    as _i8;
import 'package:ilia_flutter_challenge/features/now_playing/data/models/movie_model.dart'
    as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiClient_0 extends _i1.SmartFake implements _i2.ApiClient {
  _FakeApiClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MovieService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieService extends _i1.Mock implements _i4.MovieService {
  @override
  _i2.ApiClient get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeApiClient_0(
          this,
          Invocation.getter(#client),
        ),
        returnValueForMissingStub: _FakeApiClient_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.ApiClient);

  @override
  _i5.Future<_i3.Either<_i6.FetchFailure, List<_i7.MovieModel>>>
      fetchPlayingMovies([int? page = 1]) => (super.noSuchMethod(
            Invocation.method(
              #fetchPlayingMovies,
              [page],
            ),
            returnValue: _i5.Future<
                    _i3.Either<_i6.FetchFailure, List<_i7.MovieModel>>>.value(
                _FakeEither_1<_i6.FetchFailure, List<_i7.MovieModel>>(
              this,
              Invocation.method(
                #fetchPlayingMovies,
                [page],
              ),
            )),
            returnValueForMissingStub: _i5.Future<
                    _i3.Either<_i6.FetchFailure, List<_i7.MovieModel>>>.value(
                _FakeEither_1<_i6.FetchFailure, List<_i7.MovieModel>>(
              this,
              Invocation.method(
                #fetchPlayingMovies,
                [page],
              ),
            )),
          ) as _i5.Future<_i3.Either<_i6.FetchFailure, List<_i7.MovieModel>>>);

  @override
  _i5.Future<_i3.Either<_i6.FetchFailure, _i8.MovieDetail>> fetchMovieDetail(
          String? movieId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMovieDetail,
          [movieId],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.FetchFailure, _i8.MovieDetail>>.value(
                _FakeEither_1<_i6.FetchFailure, _i8.MovieDetail>(
          this,
          Invocation.method(
            #fetchMovieDetail,
            [movieId],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.FetchFailure, _i8.MovieDetail>>.value(
                _FakeEither_1<_i6.FetchFailure, _i8.MovieDetail>(
          this,
          Invocation.method(
            #fetchMovieDetail,
            [movieId],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.FetchFailure, _i8.MovieDetail>>);
}
